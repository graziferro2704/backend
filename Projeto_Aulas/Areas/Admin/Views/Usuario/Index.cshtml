@model X.PagedList.PagedList<App.Models.Usuario>

@{
    ViewData["Title"] = "Index";
}

<h1 class="no-print">Index</h1>

<p class="no-print">
    <a class="btn btn-dark" asp-action="Create">Criar Novo</a>
</p>

<form class="d-flex align-items-center no-print" asp-action="Index" method="get">
    <span>Consulta: </span>
    <input type="text" name="txtFiltro" placeholder="Digite aqui o que procura" value="@ViewBag.txtFiltro" class="form-control">
    <button class="btn btn-dark" type="submit"><i class="bi bi-search"></i> Buscar</button>
    <select name="selOrdenacao" class="form-control mx-2">
        <option value="Nome" selected="@((string)ViewBag.Ordem == "Nome")" > Ordenar por nome </option>
        <option value="Nome_Desc" selected="@((string)ViewBag.Ordem == "Nome_Desc")"> Ordenar por nome descendente </option>
        <option value="Login" selected="@((string)ViewBag.Ordem == "Login")"> Ordenar por login </option>
    </select>
    <button class="btn btn-dark" type="submit" name="botao" value="Relatorio"> Relatório </button>
</form>

<h1 class="bg-danger p-3 rounded text-center only-print"> Relatório de usuários cadastrados </h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Imagem)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Login)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imagem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Login)
            </td>
            <td class="no-print">
                <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.UsuarioId">Editar</a> |
                <a class="btn btn-dark" asp-action="Details" asp-route-id="@item.UsuarioId">Detalhes</a> |
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.UsuarioId">Deletar</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="d-flex justify-content-center no-print">
    <ul class="pagination">
        @{
            string primeira = "";
            string ultima = "";
        }

        @if (!Model.HasPreviousPage)
            primeira = "disabled";

        @if (!Model.HasNextPage)
            ultima = "disabled";

        <li class="page-item @primeira">
            <a class="page-link bg-dark" asp-route-pagina="1" asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;&lt;</a>
        </li>
        <li class="page-item @primeira">
            <a class="page-link bg-dark" asp-route-pagina="@(Model.PageNumber - 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;</a>
        </li>

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link bg-dark" asp-route-pagina="@i" asp-route-txtFiltro="@ViewData["txtFiltro"]">@i</a>
            </li>
        }

        <li class="page-item @ultima">
            <a class="page-link bg-dark" asp-route-pagina="@(Model.PageNumber + 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">></a>
        </li>
        <li class="page-item @ultima">
            <a class="page-link bg-dark" asp-route-pagina="@Model.PageCount" asp-route-txtFiltro="@ViewData["txtFiltro"]">>></a>
        </li>

    </ul>
</div>
